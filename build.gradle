buildscript {
    ext.junitVersion = "5.4.1"
    ext.junitPlatformVersion = "1.4.1"
}

plugins {
    // Apply the Kotlin JVM plugin to add support for Kotlin on the JVM.
    id "org.jetbrains.kotlin.jvm" version "1.3.21"

    // Apply the application plugin to add support for building a CLI application.
    id "application"

    // Generate IntelliJ IDEA project files
    id "idea"
}

version "0.0.1"

repositories {
    mavenCentral()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.0.1"

    testRuntime("org.junit.platform:junit-platform-launcher:$junitPlatformVersion")
    testCompile("org.junit.jupiter:junit-jupiter-api:$junitVersion")
    testRuntime("org.junit.jupiter:junit-jupiter-engine:$junitVersion")
    testRuntime("org.junit.vintage:junit-vintage-engine:$junitVersion")

    implementation "net.java.dev.jna:jna:5.0.0"
    implementation "net.java.dev.jna:jna-platform:5.0.0"

    implementation project(path: ":common")
    implementation project(path: ":stack")
}

allprojects {
    test {
        useJUnitPlatform()
        testLogging {
            events "passed", "skipped", "failed"
        }
    }
}

// Define the main class for the application.
mainClassName = "sssemil.com.bridge.MainKt"

kotlin.sourceSets.all {
    languageSettings.useExperimentalAnnotation("kotlin.ExperimentalUnsignedTypes")
}